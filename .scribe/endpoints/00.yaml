name: Authentication
description: |-

  API endpoints for user registration, login, and logout functionalities.
  These endpoints allow users to register an account, login with their credentials, and logout by deleting their authentication tokens.
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/register
    metadata:
      groupName: Authentication
      groupDescription: |-

        API endpoints for user registration, login, and logout functionalities.
        These endpoints allow users to register an account, login with their credentials, and logout by deleting their authentication tokens.
      subgroup: ''
      subgroupDescription: ''
      title: 'Register a new user.'
      description: |-
        This endpoint allows a user to register with the provided details. Upon successful registration, a token is generated and returned to the user.
        The registration data must include a unique email address, a valid password (min length 8 characters), and a user type.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nickname:
        name: nickname
        description: "optional User's nickname. Max length: 255 characters."
        required: false
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      given_name:
        name: given_name
        description: "User's given name. Max length: 255 characters."
        required: true
        example: voluptatum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      family_name:
        name: family_name
        description: "User's family name. Max length: 255 characters."
        required: true
        example: autem
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: "User's email address. Must be unique."
        required: true
        example: ugrady@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: "User's password. Min length: 8 characters."
        required: true
        example: T8L)RSl/
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      company_id:
        name: company_id
        description: 'optional ID of the company associated with the user.'
        required: false
        example: 18
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      user_type:
        name: user_type
        description: 'Type of user (client, staff, applicant, administrator, super-user).'
        required: true
        example: sit
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: 'Status of the user (active, unconfirmed, suspended, banned, unknown).'
        required: true
        example: labore
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      nickname: ut
      given_name: voluptatum
      family_name: autem
      email: ugrady@example.org
      password: T8L)RSl/
      company_id: 18
      user_type: sit
      status: labore
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
             "status": "success",
             "data": {
                 "id": 1,
                 "nickname": "JohnDoe",
                 "given_name": "John",
                 "family_name": "Doe",
                 "email": "john.doe@example.com",
                 "company_id": 1,
                 "user_type": "client",
                 "status": "active",
                 "token": "generated_token_here"
             },
             "message": "You are registered successfully with token generated_token_here"
          }
        headers: []
        description: 'Successful registration'
        custom: []
      -
        status: 422
        content: |-
          {
             "status": "error",
             "message": "The given data was invalid.",
             "errors": {
                 "email": ["The email has already been taken."]
             }
          }
        headers: []
        description: 'Validation Error'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/logout
    metadata:
      groupName: Authentication
      groupDescription: |-

        API endpoints for user registration, login, and logout functionalities.
        These endpoints allow users to register an account, login with their credentials, and logout by deleting their authentication tokens.
      subgroup: ''
      subgroupDescription: ''
      title: 'Logout the user.'
      description: 'This endpoint allows the user to logout by deleting their authentication tokens, effectively invalidating any active sessions.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "status": "success",
             "message": "You are logged out successfully."
          }
        headers: []
        description: 'Successful logout'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
